<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxau.wmy.mapper.MovieMapper">

    <resultMap id="movieResult" type="Movie">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="duration" column="duration"/>
        <result property="directors" column="directors"/>
        <result property="actors" column="actors"/>
        <result property="releaseDate" column="release_date"/>
        <result property="status" column="status"/>
        <result property="plot" column="plot"/>
        <result property="poster" column="poster"/>
        <result property="country" column="country"/>
        <collection property="categories" column="id" ofType="Category" select="selectMovieCate">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </collection>
    </resultMap>

    <!--movieScore-->
    <resultMap id="movieScoreResult" type="MovieScore">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="duration" column="duration"/>
        <result property="directors" column="directors"/>
        <result property="actors" column="actors"/>
        <result property="releaseDate" column="release_date"/>
        <result property="status" column="status"/>
        <result property="plot" column="plot"/>
        <result property="poster" column="poster"/>
        <result property="country" column="country"/>
        <result property="score" column="score"/>
        <result property="count" column="count"/>
        <collection property="categories" column="id" ofType="Category" select="selectMovieCate">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </collection>
    </resultMap>

    <!--查询所有的电影及评分-->
    <select id="getAll" resultMap="movieScoreResult">
        <include refid="movieScoreSql"></include>
    </select>

    <!--子查询-->
    <select id="selectMovieCate" parameterType="int" resultType="Category">
        select c.* from movie_category m left join category c on c.id=m.category_id where movie_id=#{movieId}
    </select>

    <!--根据id-->
    <select id="getById" resultMap="movieResult" parameterType="Integer">
        select * from movie where id=#{id}
    </select>

    <!--根据类别id查电影-->
    <select id="getByCategoryId" parameterType="Integer" resultMap="movieResult">
        select m.*
        from movie m,movie_category mc
        where mc.movie_id=m.id
        and mc.category_id=#{categoryId}
    </select>

    <!--更新电影-->
    <update id="updateMovie" parameterType="Movie">
        UPDATE `movie`
        <set>
            <if test="name != null">`name` = #{name},</if>
            <if test="duration != null">duration = #{duration},</if>
            <if test="directors != null">directors = #{directors},</if>
            <if test="actors != null">actors = #{actors},</if>
            <if test="releaseTime != null">release_time = #{releaseTime},</if>
            <if test="plot != null">plot = #{plot},</if>
            <if test="poster != null">poster = #{poster},</if>
            <if test="country != null">country = #{country},</if>
            <if test="status != null">status = #{status}</if>
        </set>
        WHERE id = #{id}
    </update>

    <!--获取已经上映的电影-->
    <select id="getMovieReleased" resultMap="movieResult" parameterType="Integer">
        select * from movie where status=#{status}
    </select>

    <!--获取电影收藏列表-->
    <select id="getUserMovie" resultMap="movieScoreResult">
        SELECT m.* FROM `watch` w LEFT JOIN (SELECT mc.*,s.score,s.count
        FROM movie mc LEFT JOIN
        (SELECT movie_id,ROUND(AVG(score),1) as score,COUNT(*) as count
        FROM `score` GROUP BY movie_id) s on mc.id = s.movie_id) m ON w.movie_id=m.id where w.user_id=#{userId}
    </select>

    <!--获取电影及评分-->
    <select id="getMovieScore" resultMap="movieScoreResult">
        <include refid="movieScoreSql"></include>
        ORDER BY score DESC,count DESC
    </select>

    <!--根据名字查电影-->
    <select id="getByName" resultMap="movieScoreResult" parameterType="String">
        <include refid="movieScoreSql"></include>
        where name like CONCAT('%',#{name},'%')
    </select>

    <!--根据导演查电影-->
    <select id="getByDirector" resultMap="movieScoreResult" parameterType="String">
        <include refid="movieScoreSql"></include>
        where directors like CONCAT('%',#{director},'%')
    </select>

    <!--根据演员查电影-->
    <select id="getByActor" resultMap="movieScoreResult" parameterType="String">
        <include refid="movieScoreSql"></include>
        where actors like CONCAT('%',#{actor},'%')
    </select>

    <!--根据国家查电影-->
    <select id="getByCountry" resultMap="movieScoreResult" parameterType="String">
        <include refid="movieScoreSql"></include>
        where country like CONCAT('%',#{country},'%')
    </select>

    <!--根据类型名称查电影-->
    <select id="getByCategory" resultMap="movieScoreResult" parameterType="String">
        SELECT m.*,s.score,s.count
        FROM (SELECT mc.*
        from movie mc left join movie_category cat
        on mc.id=cat.movie_id
        LEFT JOIN category c
        on category_id=c.id where c.name like CONCAT('%',#{category},'%')) m LEFT JOIN
        (SELECT movie_id,ROUND(AVG(score),1) as score,COUNT(*) as count
        FROM `score` GROUP BY movie_id) s on m.id = s.movie_id
    </select>

    <!--获取已经上映的电影及评分-->
    <select id="getMovieScoreReleased" resultMap="movieScoreResult">
        <include refid="movieScoreSql"></include>
        where status=#{status}
    </select>

    <sql id="movieScoreSql">
        SELECT m.*,s.score,s.count
        FROM movie m LEFT JOIN
        (SELECT movie_id,ROUND(AVG(score),1) as score,COUNT(*) as count
        FROM `score` GROUP BY movie_id) s on m.id = s.movie_id
    </sql>
</mapper>